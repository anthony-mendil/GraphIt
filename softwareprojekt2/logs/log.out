Logging Provider: org.jboss.logging.Log4jLoggerProvider
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
HHH000412: Hibernate Core {5.3.7.Final}
HHH000206: hibernate.properties not found
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@9ba8206
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4a965454
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3e48f795
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f8fc7e3
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4278cca6
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ab41449
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@43b9b8d5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@22e8cf9e
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1d540690] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7e3995a7] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1fb48297]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.save(GraphDao.java:39)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31b0ccf6] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@53455003]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@164df997, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@31b0ccf6] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1c3ae501]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ca61f4]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d901154]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d796f13]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5607bd02]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a6ab9ae]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e7c3961]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@603964c8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.save(GraphDao.java:39)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 75 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.save(GraphDao.java:39)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 75 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.save(GraphDao.java:39)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 75 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.save(GraphDao.java:39)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 75 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@401fa5f1
Registering SessionFactory: 8e2168bc-c4e5-4bd2-9e7e-7121750fa876 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Statistics initialized [enabled=false]
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@43ce2302
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@32a36d64
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5d783ecd
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@519b321
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@377d46b3
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e9cc575
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@28e1e3d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4a4635f6
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@17d3bad3] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6f9c6231] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1d11f609]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.delete(GraphDao.java:59)
	at log_management.dao.GraphDao.save(GraphDao.java:41)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@402fabcd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@54a67481]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@550bbeb0, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@402fabcd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@69221414]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ea133d1]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e75d55e]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@522463c1]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4233d2a6]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211eec45]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e8f447c]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1d6e8e4d] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.delete(GraphDao.java:59)
	at log_management.dao.GraphDao.save(GraphDao.java:41)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 76 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.delete(GraphDao.java:59)
	at log_management.dao.GraphDao.save(GraphDao.java:41)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 76 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.delete(GraphDao.java:59)
	at log_management.dao.GraphDao.save(GraphDao.java:41)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 76 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.delete(GraphDao.java:59)
	at log_management.dao.GraphDao.save(GraphDao.java:41)
	at log_management.DatabaseManager.setup(DatabaseManager.java:97)
	at log_management.DatabaseManager.updateNewGraph(DatabaseManager.java:119)
	at actions.Action.notifyObserverNewGraph(Action.java:63)
	at actions.other.CreateGraphAction.action(CreateGraphAction.java:53)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at gui.Controller.buttonClicked2(Controller.java:1199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor1.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1769)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:380)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:294)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:416)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:415)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 76 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 74a714b2-4cb8-4712-a622-0b1b7ed0feba (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@51eb9f47
HHH000397: Using ASTQueryTranslatorFactory
parse() - HQL: SELECT g from log_management.tables.Graph g where g.id > 0
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'log_management'
    |  |     |  |  \-[IDENT] Node: 'tables'
    |  |     |  \-[IDENT] Node: 'Graph'
    |  |     \-[ALIAS] Node: 'g'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'g'
    \-[WHERE] Node: 'where'
       \-[GT] Node: '>'
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'g'
          |  \-[IDENT] Node: 'id'
          \-[NUM_INT] Node: '0'

select << begin [level=1, statement=select]
FromClause{level=1} : log_management.tables.Graph (g) -> graph0_
Resolved : g -> graph0_.id
Resolved : g -> graph0_.id
getDataType() : id -> org.hibernate.type.IntegerType@6abd3587
Resolved : g.id -> graph0_.id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} graph0_.id ) ( FromClause{level=1} GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ ) ( where ( > ( graph0_.id graph0_.id id ) 0 ) ) )
Using FROM fragment [GRAPHITDATABASE.PUBLIC.GRAPHS graph0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (GRAPHITDATABASE.PUBLIC.GRAPHS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'graph0_.id as id1_0_' {alias=g, className=log_management.tables.Graph, tableAlias=graph0_}
    |  \-[SQL_TOKEN] SqlFragment: 'graph0_.GXL as GXL2_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[g], fromElementByTableAlias=[graph0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'GRAPHITDATABASE.PUBLIC.GRAPHS graph0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=g,role=null,tableName=GRAPHITDATABASE.PUBLIC.GRAPHS,tableAlias=graph0_,origin=null,columns={,className=log_management.tables.Graph}}
    \-[WHERE] SqlNode: 'where'
       \-[GT] BinaryLogicOperatorNode: '>'
          +-[DOT] DotNode: 'graph0_.id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=id,path=g.id,tableAlias=graph0_,className=log_management.tables.Graph,classAlias=g}
          |  +-[ALIAS_REF] IdentNode: 'graph0_.id' {alias=g, className=log_management.tables.Graph, tableAlias=graph0_}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NUM_INT] LiteralNode: '0'

throwQueryException() : no errors
HQL: SELECT g from log_management.tables.Graph g where g.id > 0
SQL: select graph0_.id as id1_0_, graph0_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id>0
throwQueryException() : no errors

    select
        graph0_.id as id1_0_,
        graph0_.GXL as GXL2_0_ 
    from
        GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ 
    where
        graph0_.id>0
Result set row: 0
Result row: EntityKey[log_management.tables.Graph#1250]
Resolving associations for [log_management.tables.Graph#1250]
Done materializing entity [log_management.tables.Graph#1250]
Initiating JDBC connection release from afterTransaction
parse() - HQL: SELECT l from log_management.tables.Log l where l.graph.id = :gid
throwQueryException() : no errors
--- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'from'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[IDENT] Node: 'log_management'
    |  |     |  |  \-[IDENT] Node: 'tables'
    |  |     |  \-[IDENT] Node: 'Log'
    |  |     \-[ALIAS] Node: 'l'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'l'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[DOT] Node: '.'
          |  |  +-[IDENT] Node: 'l'
          |  |  \-[IDENT] Node: 'graph'
          |  \-[IDENT] Node: 'id'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'gid'

select << begin [level=1, statement=select]
FromClause{level=1} : log_management.tables.Log (l) -> log0_
Resolved : l -> log0_.id
Resolved : l -> log0_.id
getDataType() : graph -> org.hibernate.type.ManyToOneType(log_management.tables.Graph)
dereferenceShortcut() : property id in log_management.tables.Log does not require a join.
Unresolved property path is now 'graph.id'
Resolved : l.graph -> log0_.graph_id
getDataType() : graph.id -> org.hibernate.type.IntegerType@6abd3587
Resolved : l.graph.id -> log0_.graph_id
select : finishing up [level=1, statement=select]
processQuery() :  ( SELECT ( {select clause} log0_.id ) ( FromClause{level=1} GRAPHITDATABASE.PUBLIC.LOGS log0_ ) ( where ( = ( log0_.graph_id ( log0_.graph_id log0_.id graph ) id ) ? ) ) )
Using FROM fragment [GRAPHITDATABASE.PUBLIC.LOGS log0_]
select >> end [level=1, statement=select]
--- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (GRAPHITDATABASE.PUBLIC.LOGS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'log0_.id as id1_1_' {alias=l, className=log_management.tables.Log, tableAlias=log0_}
    |  \-[SQL_TOKEN] SqlFragment: 'log0_.graph_id as graph_id5_1_, log0_.LOGENTRYNAME as LOGENTRY2_1_, log0_.PARAMETERS as PARAMETE3_1_, log0_.TIME as TIME4_1_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[log0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'GRAPHITDATABASE.PUBLIC.LOGS log0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=GRAPHITDATABASE.PUBLIC.LOGS,tableAlias=log0_,origin=null,columns={,className=log_management.tables.Log}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'log0_.graph_id' {propertyName=id,dereferenceType=PRIMITIVE,getPropertyPath=graph.id,path=l.graph.id,tableAlias=log0_,className=log_management.tables.Log,classAlias=l}
          |  +-[DOT] DotNode: 'log0_.graph_id' {propertyName=id,dereferenceType=UNKNOWN,getPropertyPath=graph.id,path=l.graph,tableAlias=log0_,className=log_management.tables.Log,classAlias=l}
          |  |  +-[ALIAS_REF] IdentNode: 'log0_.id' {alias=l, className=log_management.tables.Log, tableAlias=log0_}
          |  |  \-[IDENT] IdentNode: 'graph' {originalText=graph}
          |  \-[IDENT] IdentNode: 'id' {originalText=id}
          \-[NAMED_PARAM] ParameterNode: '?' {name=gid, expectedType=org.hibernate.type.IntegerType@6abd3587}

throwQueryException() : no errors
HQL: SELECT l from log_management.tables.Log l where l.graph.id = :gid
SQL: select log0_.id as id1_1_, log0_.graph_id as graph_id5_1_, log0_.LOGENTRYNAME as LOGENTRY2_1_, log0_.PARAMETERS as PARAMETE3_1_, log0_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.graph_id=?
throwQueryException() : no errors

    select
        log0_.id as id1_1_,
        log0_.graph_id as graph_id5_1_,
        log0_.LOGENTRYNAME as LOGENTRY2_1_,
        log0_.PARAMETERS as PARAMETE3_1_,
        log0_.TIME as TIME4_1_ 
    from
        GRAPHITDATABASE.PUBLIC.LOGS log0_ 
    where
        log0_.graph_id=?
Initiating JDBC connection release from afterTransaction
On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
begin

    call next value for hibernate_sequence
Sequence value obtained: 1282
HHH000387: ResultSet's statement was not registered
Generated identifier: 1282, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 1 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
log_management.tables.Graph{gxl=net.sourceforge.gxl.GXLDocument@de22dc5 updateLevel: 0 listeners: [] compoundEdit: null, id=1250}
log_management.tables.Graph{gxl=net.sourceforge.gxl.GXLDocument@32eecf1e updateLevel: 0 listeners: [] compoundEdit: null, id=1282}

    insert 
    into
        GRAPHITDATABASE.PUBLIC.GRAPHS
        (GXL, id) 
    values
        (?, ?)

    delete 
    from
        GRAPHITDATABASE.PUBLIC.GRAPHS 
    where
        id=?
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@2de9adc6
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@25548665
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@21e82479
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4f3adf0b
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2f5ddcb7
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2e3b1097
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4e1032c5
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@57cb6e8b
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@16b2a8a1] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60fbbd48] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2f323d88]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47546235] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1b4f7ac]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@5fe3b7c1, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@47546235] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@49cc010a]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d695b6]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36464e46]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e9eafcc]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@44495c8a]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61fd2917]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@675ae3da]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4644fdb6] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 242dfe01-c1d3-4c11-b51f-d9b78ee48ccd (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Loading entity: [log_management.tables.Graph#1282]

    select
        graph0_.id as id1_0_0_,
        graph0_.GXL as GXL2_0_0_ 
    from
        GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ 
    where
        graph0_.id=?
Result set row: 0
Result row: EntityKey[log_management.tables.Graph#1282]
Resolving associations for [log_management.tables.Graph#1282]
Done materializing entity [log_management.tables.Graph#1282]
Done entity load
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@540dacf9
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@266e92e
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6d2e6ce9
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5135e6ba
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6866e201
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5d7c59ba
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@43ab3fd8
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3d551121
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@627c8a60] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5d72be1c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@47bd0f95]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.LogDao.save(LogDao.java:84)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7615cd99] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@44ac7007]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6b49ca26, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7615cd99] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ecc52e0]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62a32f9a]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5692b593]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd2489f]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@79068e4d]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@233d81b6]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@84cdb12]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@42b96ce0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.LogDao.save(LogDao.java:84)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 53 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.LogDao.save(LogDao.java:84)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 53 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.LogDao.save(LogDao.java:84)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 53 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.LogDao.save(LogDao.java:84)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 53 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 8628cdd7-0cc6-4b4a-b31c-2788e9b8455e (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
begin

    call next value for hibernate_sequence
Sequence value obtained: 1283
HHH000387: ResultSet's statement was not registered
Generated identifier: 1283, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
committing
Processing flush-time cascades
Dirty checking collections
Flushed: 1 insertions, 0 updates, 0 deletions to 2 objects
Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
Listing entities:
log_management.tables.Graph{gxl=net.sourceforge.gxl.GXLDocument@32eecf1e updateLevel: 0 listeners: [] compoundEdit: null, id=1282}
log_management.tables.Log{id=1283, time=2019-01-16T17:22:10.668, logEntryName=ADD_SPHERE, parameters={"sphere":{"id":0,"fillPaint":{"colorSpace":{"type":5,"numComponents":3,"profile":{"mediaWhitePoint":[0.9504547,1.0,1.0890503],"matrix":[[0.43606567,0.3851471,0.1430664],[0.2224884,0.71687317,0.06060791],[0.013916016,0.097076416,0.71409607]],"data":"AAAMSGxjbXMCEAAAbW50clJHQiBYWVogB84AAgAJAAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1sY21zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAzZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwAAAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAAA9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RSQwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1QYWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAASc1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNjAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBpbiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDPFAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMAKAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCyALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIBWQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oDZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATTBOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowGnQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiqCL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsLIgs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3eDfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPURExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSLFK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUYihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzMHPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUhoSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDksbiyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJjMpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/iQCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVHe0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9JT5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2CqYPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFqSGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQUdHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZif6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSVX5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFHobaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1ErbiuLa6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsuu6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJOsm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3mlucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf//","numComponents":3,"colorSpaceType":5,"majorVersion":2,"minorVersion":16,"pcstype":0,"profileClass":1},"cs_sRGB":true},"rgb":-5320507,"transparency":1,"green":208,"blue":197,"red":174,"alpha":255},"coordinates":{"x":21.0,"y":18.0},"width":200.0,"height":200.0,"annotation":{"de":"Sphäre Überschrift","en":"Sphere Headline"},"vertices":[],"font":"Arial","fontSize":12}}, graph=log_management.tables.Graph#1282}

    insert 
    into
        GRAPHITDATABASE.PUBLIC.LOGS
        (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) 
    values
        (?, ?, ?, ?, ?)
could not execute statement [n/a]
org.h2.jdbc.JdbcSQLException: Wert zu gross / lang für Feld "PARAMETERS VARCHAR(255)": "STRINGDECODE('{\""sphere\"":{\""id\"":0,\""fillPaint\"":{\""colorSpace\"":{\""type\"":5,\""numComponents\"":3,\""profile\"":{\""mediaWhitePoint... (4811)"
Value too long for column "PARAMETERS VARCHAR(255)": "STRINGDECODE('{\""sphere\"":{\""id\"":0,\""fillPaint\"":{\""colorSpace\"":{\""type\"":5,\""numComponents\"":3,\""profile\"":{\""mediaWhitePoint... (4811)"; SQL statement:
insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?) [22001-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:329)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:749)
	at org.h2.command.dml.Insert.insertRows(Insert.java:151)
	at org.h2.command.dml.Insert.update(Insert.java:114)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:157)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdate(JdbcPreparedStatement.java:143)
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.executeUpdate(ResultSetReturnImpl.java:175)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3171)
	at org.hibernate.persister.entity.AbstractEntityPersister.insert(AbstractEntityPersister.java:3686)
	at org.hibernate.action.internal.EntityInsertAction.execute(EntityInsertAction.java:90)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:604)
	at org.hibernate.engine.spi.ActionQueue.executeActions(ActionQueue.java:478)
	at org.hibernate.event.internal.AbstractFlushingEventListener.performExecutions(AbstractFlushingEventListener.java:356)
	at org.hibernate.event.internal.DefaultFlushEventListener.onFlush(DefaultFlushEventListener.java:39)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1454)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:511)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3283)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2479)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)
	at log_management.dao.LogDao.save(LogDao.java:88)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
SQL Error: 22001, SQLState: 22001
Wert zu gross / lang für Feld "PARAMETERS VARCHAR(255)": "STRINGDECODE('{\""sphere\"":{\""id\"":0,\""fillPaint\"":{\""colorSpace\"":{\""type\"":5,\""numComponents\"":3,\""profile\"":{\""mediaWhitePoint... (4811)"
Value too long for column "PARAMETERS VARCHAR(255)": "STRINGDECODE('{\""sphere\"":{\""id\"":0,\""fillPaint\"":{\""colorSpace\"":{\""type\"":5,\""numComponents\"":3,\""profile\"":{\""mediaWhitePoint... (4811)"; SQL statement:
insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?) [22001-190]
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:200)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:378)
	at org.hibernate.internal.ExceptionConverterImpl.handlePersistenceException(ExceptionConverterImpl.java:297)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:155)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:181)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:188)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1460)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:511)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3283)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2479)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:473)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:178)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)
	at log_management.dao.LogDao.save(LogDao.java:88)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
HHH000346: Error during managed flush [org.hibernate.exception.DataException: could not execute statement]
JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:314)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:187)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:39)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:271)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)
	at log_management.dao.LogDao.save(LogDao.java:88)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:88)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Initiating JDBC connection release from afterTransaction
Initiating JDBC connection release from afterTransaction
rollback() called on an inactive transaction
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@6125d03e
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@48c6a61c
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@56ac0dde
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@31a510c5
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7ece92ef
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3c53d6c
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@35310237
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2c0b1f6c
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@26d8a9e8] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@cdcce02] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@31414514]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b77b417] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@24e91dbf]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@3242c5c3, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@b77b417] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2897f7f2]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6292e940]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f1b0cce]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771eeeec]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@596c923d]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45526a11]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@427c9466]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@3498c995] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: f4110777-af77-4ace-9e6e-8a389c01ed1b (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1a367a66
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@53ba4d2f
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@63ed69b4
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@360ad0ad
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1fc67940
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e949ca2
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@163ce60d
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@76d3c3df
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5af3a83c] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@60b84e4c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@11c5d0d8]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@828d67c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@359e8a18]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@f507647, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@828d67c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@1813bf34]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29c607df]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5345d33e]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e57a605]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe30156]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e3d6f74]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c84f1d0]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@1de23427] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at log_management.dao.GraphDao.update(GraphDao.java:51)
	at log_management.DatabaseManager.updateGraph(DatabaseManager.java:104)
	at log_management.DatabaseManager.addEntryDatabase(DatabaseManager.java:73)
	at actions.add.AddSphereLogAction.action(AddSphereLogAction.java:56)
	at actions.ActionHistory.execute(ActionHistory.java:41)
	at graph.visualization.control.SpherePickingPlugin.mouseClicked(SpherePickingPlugin.java:82)
	at edu.uci.ics.jung.visualization.control.PluggableGraphMouse.mouseClicked(PluggableGraphMouse.java:93)
	at java.awt.AWTEventMulticaster.mouseClicked(AWTEventMulticaster.java:270)
	at java.awt.Component.processMouseEvent(Component.java:6536)
	at javax.swing.JComponent.processMouseEvent(JComponent.java:3324)
	at java.awt.Component.processEvent(Component.java:6298)
	at java.awt.Container.processEvent(Container.java:2236)
	at java.awt.Component.dispatchEventImpl(Component.java:4889)
	at java.awt.Container.dispatchEventImpl(Container.java:2294)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4888)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4534)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4466)
	at java.awt.Container.dispatchEventImpl(Container.java:2280)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4711)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:758)
	at java.awt.EventQueue.access$500(EventQueue.java:97)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.awt.EventQueue$3.run(EventQueue.java:703)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:86)
	at java.awt.EventQueue$4.run(EventQueue.java:731)
	at java.awt.EventQueue$4.run(EventQueue.java:729)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:76)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:728)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 54 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: 612f9709-acd0-4dbf-b573-de6cea696fd2 (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
Located and parsed 1 persistence units; checking each
Checking persistence-unit [name=NewPersistenceUnit, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [NewPersistenceUnit]
Persistence-unit [NewPersistenceUnit] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
PersistenceUnitInfo [
	name: NewPersistenceUnit
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Git/software-projekt-2/softwareprojekt2/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names [
		log_management.tables.Log
		log_management.tables.Graph]
	Mapping files names []
	Properties [
		hibernate.connection.driver_class: org.h2.Driver
		hbm2ddl.auto: update
		hibernate.format_sql: true
		hibernate.connection.username: 
		hibernate.archive.autodetection: class
		hibernate.connection.url: jdbc:h2:~/GraphItDatabase
		hibernate.show_sql: true
		hibernate.connection.password: 
		javax.persistence.schema-generation.database.action: create]
Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
Overriding existing service binding [org.hibernate.secure.spi.JaccService]
Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@54bc1eee
Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3ebadcd5
Adding type registration true_false -> org.hibernate.type.TrueFalseType@46ad6aba
Adding type registration yes_no -> org.hibernate.type.YesNoType@70fdc3dd
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5d5ce2ae
Adding type registration character -> org.hibernate.type.CharacterType@426f500d
Adding type registration char -> org.hibernate.type.CharacterType@426f500d
Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@426f500d
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration java.lang.Short -> org.hibernate.type.ShortType@7dfcf24b
Adding type registration integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration int -> org.hibernate.type.IntegerType@6abd3587
Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@6abd3587
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration long -> org.hibernate.type.LongType@314a8af7
Adding type registration java.lang.Long -> org.hibernate.type.LongType@314a8af7
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2b8a7024
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration double -> org.hibernate.type.DoubleType@4166b515
Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4166b515
Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@20697a71
Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3af28ca6
Adding type registration string -> org.hibernate.type.StringType@3bba4907
Adding type registration java.lang.String -> org.hibernate.type.StringType@3bba4907
Adding type registration nstring -> org.hibernate.type.StringNVarcharType@7f552fdb
Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@471a4205
Adding type registration url -> org.hibernate.type.UrlType@7cd11511
Adding type registration java.net.URL -> org.hibernate.type.UrlType@7cd11511
Adding type registration Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration java.time.Duration -> org.hibernate.type.DurationType@7e16b560
Adding type registration Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration java.time.Instant -> org.hibernate.type.InstantType@10ebbf68
Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@10b7492c
Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3bae2f73
Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@451b45b6
Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3e24aabd
Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4d0f9dce
Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@631279aa
Adding type registration date -> org.hibernate.type.DateType@7279116b
Adding type registration java.sql.Date -> org.hibernate.type.DateType@7279116b
Adding type registration time -> org.hibernate.type.TimeType@717874e6
Adding type registration java.sql.Time -> org.hibernate.type.TimeType@717874e6
Adding type registration timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@36a6258d
Adding type registration java.util.Date -> org.hibernate.type.TimestampType@36a6258d
Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6f55985e
Adding type registration calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@23d37b49
Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4a87a130
Adding type registration locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@37fd726e
Adding type registration currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@408084b8
Adding type registration timezone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@319801e7
Adding type registration class -> org.hibernate.type.ClassType@119240d9
Adding type registration java.lang.Class -> org.hibernate.type.ClassType@119240d9
Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@10771e0d
Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@ea8223a
Adding type registration binary -> org.hibernate.type.BinaryType@a4db85b
Adding type registration byte[] -> org.hibernate.type.BinaryType@a4db85b
Adding type registration [B -> org.hibernate.type.BinaryType@a4db85b
Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@78b9d3d2
Adding type registration row_version -> org.hibernate.type.RowVersionType@63c01c3d
Adding type registration image -> org.hibernate.type.ImageType@36a734b3
Adding type registration characters -> org.hibernate.type.CharArrayType@7616137a
Adding type registration char[] -> org.hibernate.type.CharArrayType@7616137a
Adding type registration [C -> org.hibernate.type.CharArrayType@7616137a
Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1e860941
Adding type registration text -> org.hibernate.type.TextType@bfc429a
Adding type registration ntext -> org.hibernate.type.NTextType@73168c1
Adding type registration blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@721bf27f
Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@222d35e2
Adding type registration clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e8bc0f0
Adding type registration nclob -> org.hibernate.type.NClobType@2317206b
Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@2317206b
Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@159e393b
Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@21a11514
Adding type registration serializable -> org.hibernate.type.SerializableType@73ebd140
Adding type registration object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@29ed404d
Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5c8da962
Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@512ddf17
Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2c13da15
Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@77556fd
Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@368239c8
Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9e89d68
Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3b192d32
Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16f65612
Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@311d617d] into BootstrapContext; was [null]
Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7c53a9eb] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@ed17bee]
Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
HHH10001002: Using Hibernate built-in connection pool (not for production use!)
HHH10001005: using driver [org.h2.Driver] at URL [jdbc:h2:~/GraphItDatabase]
HHH10001001: Connection properties: {user=, password=}
HHH10001003: Autocommit mode: false
Initializing Connection pool with 1 Connections
HHH000115: Hibernate connection pool size: 20 (min=1)
Database ->
       name : H2
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
Driver ->
       name : H2 JDBC Driver
    version : 1.4.190 (2015-10-11)
      major : 1
      minor : 4
JDBC version : 4.0
HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Unable to use Java 1.7 Connection#getSchema
Unable to resolve connection default schema
org.hibernate.HibernateException: Use of DefaultSchemaNameResolver requires Dialect to provide the proper SQL statement/command but provided Dialect [org.hibernate.dialect.H2Dialect] did not return anything from Dialect#getCurrentSchemaCommand
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver$SchemaNameResolverFallbackDelegate.resolveSchemaName(DefaultSchemaNameResolver.java:100)
	at org.hibernate.engine.jdbc.env.internal.DefaultSchemaNameResolver.resolveSchemaName(DefaultSchemaNameResolver.java:76)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.determineCurrentSchemaName(JdbcEnvironmentImpl.java:298)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentImpl.<init>(JdbcEnvironmentImpl.java:232)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:114)
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35)
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:94)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:152)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243)
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214)
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:179)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:119)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:904)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:935)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at gui.Main.main(Main.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:389)
	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cd1f1c8] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a4afd8d]
Binding entity from annotated class: log_management.tables.Graph
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Graph
Created database namespace [logicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}, physicalName=Name{catalog=GRAPHITDATABASE, schema=PUBLIC}]
Bind entity log_management.tables.Graph on table GRAPHS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.GRAPHS), mappingColumn=GXL, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property gxl with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Graph:gxl]
building SimpleValue for gxl
Building property gxl
Binding entity from annotated class: log_management.tables.Log
Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
Import with entity name Log
Bind entity log_management.tables.Log on table LOGS
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=id, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property id with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:id]
building SimpleValue for id
Building property id
#makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=graph, insertable=true, updatable=true, unique=false}
Building property graph
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=LOGENTRYNAME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property logEntryName with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:logEntryName]
building SimpleValue for logEntryName
Building property logEntryName
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=PARAMETERS, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property parameters with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:parameters]
building SimpleValue for parameters
Building property parameters
Binding column: Ejb3Column{table=org.hibernate.mapping.Table(GRAPHITDATABASE.PUBLIC.LOGS), mappingColumn=TIME, insertable=true, updatable=true, unique=false}
MetadataSourceProcessor property time with lazy=false
Attempting to locate auto-apply AttributeConverter for property [log_management.tables.Log:time]
building SimpleValue for time
Building property time
Starting fillSimpleValue for id
Starting fillSimpleValue for gxl
Starting fillSimpleValue for id
Starting fillSimpleValue for logEntryName
Starting fillSimpleValue for parameters
Starting fillSimpleValue for time
Forcing column [id] to be non-null as it is part of the primary key for table [graphs]
Forcing column [id] to be non-null as it is part of the primary key for table [logs]
Resolving reference to class: log_management.tables.Graph
Resolving reference to class: log_management.tables.Graph
Using ORDINAL-based conversion for Enum actions.LogEntryName
Building session factory
SessionFactory name : null
Automatic flush during beforeCompletion(): enabled
Automatic session close at end of transaction: disabled
Statistics: disabled
Deleted entity synthetic identifier rollback: disabled
Default entity-mode: pojo
Check Nullability in Core (should be disabled when Bean Validation is on): enabled
Allow initialization of lazy state outside session : disabled
Using BatchFetchStyle : LEGACY
Default batch fetch size: -1
Maximum outer join fetch depth: null
Default null ordering: NONE
Order SQL updates by primary key: disabled
Order SQL inserts for batching: disabled
multi-tenancy strategy : NONE
JTA Track by Thread: enabled
Query language substitutions: {}
Named query checking : enabled
Second-level cache: disabled
Second-level query cache: disabled
Second-level query cache factory: null
Second-level cache region prefix: null
Optimize second-level cache for minimal puts: disabled
Structured second-level cache entries: disabled
Second-level cache direct-reference entries: disabled
Automatic eviction of collection cache: disabled
JDBC batch size: 15
JDBC batch updates for versioned data: enabled
Scrollable result sets: enabled
Wrap result sets: disabled
JDBC3 getGeneratedKeys(): enabled
JDBC result set fetch size: null
Connection release mode: AFTER_TRANSACTION
Generate SQL with comments: disabled
JPA compliance - query : 
JPA compliance - closed-handling : 
JPA compliance - lists : 
JPA compliance - transactions : 
Using ORDINAL-based conversion for Enum actions.LogEntryName
Session factory constructed with filter configurations : {}
Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, javafx.runtime.version=8.0.111-b14, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, sun.awt.enableExtraMouseButtons=true, java.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;D:\Git\software-projekt-2\softwareprojekt2\target\classes;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\net.sourceforge.gxl\0.92-SNAPSHOT\net.sourceforge.gxl-0.92-SNAPSHOT.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\pdfbox\2.0.12\pdfbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\org\apache\pdfbox\fontbox\2.0.12\fontbox-2.0.12.jar;C:\Users\Jonah Jaeger\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-api\2.0.1\jung-api-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sourceforge\collections\collections-generic\4.01\collections-generic-4.01.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-visualization\2.0.1\jung-visualization-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-graph-impl\2.0.1\jung-graph-impl-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-algorithms\2.0.1\jung-algorithms-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\colt\colt\1.2.0\colt-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\concurrent\concurrent\1.3.4\concurrent-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\net\sf\jung\jung-io\2.0.1\jung-io-2.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\woodstox\wstx-asl\3.2.6\wstx-asl-3.2.6.jar;C:\Users\Jonah Jaeger\.m2\repository\stax\stax-api\1.0.1\stax-api-1.0.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio\2.4\freehep-graphicsio-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphics2d\2.4\freehep-graphics2d-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\junit\junit\4.10\junit-4.10.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-io\2.2.2\freehep-io-2.2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsbase\2.4\freehep-graphicsbase-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-pdf\2.4\freehep-graphicsio-pdf-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-tests\2.4\freehep-graphicsio-tests-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\org\freehep\freehep-graphicsio-svg\2.4\freehep-graphicsio-svg-2.4.jar;C:\Users\Jonah Jaeger\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\Jonah Jaeger\.m2\repository\com\h2database\h2\1.4.190\h2-1.4.190.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-entitymanager\5.3.7.Final\hibernate-entitymanager-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\logging\jboss-logging\3.3.2.Final\jboss-logging-3.3.2.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\hibernate-core\5.3.7.Final\hibernate-core-5.3.7.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\javassist\javassist\3.23.1-GA\javassist-3.23.1-GA.jar;C:\Users\Jonah Jaeger\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\jandex\2.0.5.Final\jandex-2.0.5.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\com\fasterxml\classmate\1.3.4\classmate-1.3.4.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\dom4j\dom4j\2.1.1\dom4j-2.1.1.jar;C:\Users\Jonah Jaeger\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.4.Final\hibernate-commons-annotations-5.0.4.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\Jonah Jaeger\.m2\repository\net\bytebuddy\byte-buddy\1.8.17\byte-buddy-1.8.17.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jgrapht\jgrapht-core\1.3.0\jgrapht-core-1.3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\jheaps\jheaps\0.9\jheaps-0.9.jar;C:\Users\Jonah Jaeger\.m2\repository\com\google\inject\guice\3.0\guice-3.0.jar;C:\Users\Jonah Jaeger\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;C:\Users\Jonah Jaeger\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.13\jackson-mapper-asl-1.9.13.jar;C:\Users\Jonah Jaeger\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.13\jackson-core-asl-1.9.13.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, hbm2ddl.auto=update, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Berlin, javafx.version=8.0.111, os.name=Windows 10, java.vm.specification.version=1.8, user.country=DE, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_111\jre\bin, sun.java.command=gui.Main, sun.cpu.endian=little, user.home=C:\Users\Jonah Jaeger, user.language=de, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_111\jre, file.separator=\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_111\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_111\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_111\jre\classes, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=1.8.0_111-b14, user.name=Jonah Jaeger, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.archive.autodetection=class, hibernate.connection.url=jdbc:h2:~/GraphItDatabase, hibernate.ejb.persistenceUnitName=NewPersistenceUnit, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=org.h2.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\JONAHJ~1\AppData\Local\Temp\, java.version=1.8.0_111, user.dir=D:\Git\software-projekt-2\softwareprojekt2, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, javax.persistence.schema-generation.database.action=create, sun.os.patch.level=, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@b065c63, java.library.path=C:\Program Files\Java\jdk1.8.0_111\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Haskell\bin;C:\Program Files\Haskell Platform\8.2.1\lib\extralibs\bin;C:\Program Files\Haskell Platform\8.2.1\bin;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\windows\system32;C:\windows;C:\windows\System32\Wbem;C:\windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;D:\MiKTeX 2.9\miktex\bin\x64\;C:\Program Files\Haskell Platform\8.2.1\mingw\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Intel\WiFi\bin\;C:\Program Files\Common Files\Intel\WirelessCommon\;C:\Program Files (x86)\apache-maven-3.6.0\bin;C:\Users\Jonah Jaeger\AppData\Roaming\local\bin;C:\Users\Jonah Jaeger\AppData\Roaming\cabal\bin;C:\Users\Jonah Jaeger\AppData\Local\Microsoft\WindowsApps;;C:\Program Files\Microsoft VS Code\bin;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.111-b14, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_111\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, java.class.version=52.0}
Skipping JACC integration as it was not enabled
Instantiated session factory
Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3cd1f1c8] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@768debd]
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Graph] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Graph
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Not known whether passed class name [log_management.tables.Log] is safe
No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : log_management.tables.Log
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName
Static SQL for entity: log_management.tables.Graph
 Version select: select id from GRAPHITDATABASE.PUBLIC.GRAPHS where id =?
 Snapshot select: select graph_.id, graph_.GXL as GXL2_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph_ where graph_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.GRAPHS (GXL, id) values (?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.GRAPHS set GXL=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.GRAPHS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66133adc]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [NONE]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f30e0a]
Visiting attribute path : gxl
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Graph)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:0>, path=log_management.tables.Graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Graph)
          - SQL table alias mapping - graph0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

Static select for entity log_management.tables.Graph [READ]: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Graph: select graph0_.id as id1_0_0_, graph0_.GXL as GXL2_0_0_ from GRAPHITDATABASE.PUBLIC.GRAPHS graph0_ where graph0_.id=?
Static SQL for entity: log_management.tables.Log
 Version select: select id from GRAPHITDATABASE.PUBLIC.LOGS where id =?
 Snapshot select: select log_.id, log_.graph_id as graph_id5_1_, log_.LOGENTRYNAME as LOGENTRY2_1_, log_.PARAMETERS as PARAMETE3_1_, log_.TIME as TIME4_1_ from GRAPHITDATABASE.PUBLIC.LOGS log_ where log_.id=?
 Insert 0: insert into GRAPHITDATABASE.PUBLIC.LOGS (graph_id, LOGENTRYNAME, PARAMETERS, TIME, id) values (?, ?, ?, ?, ?)
 Update 0: update GRAPHITDATABASE.PUBLIC.LOGS set graph_id=?, LOGENTRYNAME=?, PARAMETERS=?, TIME=? where id=?
 Delete 0: delete from GRAPHITDATABASE.PUBLIC.LOGS where id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b1d2887]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c2c22f3]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [NONE]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33e5ccce]
Visiting attribute path : graph
Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@270421f5]
Visiting attribute path : graph.gxl
Visiting attribute path : logEntryName
Visiting attribute path : parameters
Visiting attribute path : time
Building LoadPlan...
processing queryspace <gen:0>
LoadPlan(entity=log_management.tables.Log)
    - Returns
       - EntityReturnImpl(entity=log_management.tables.Log, querySpaceUid=<gen:0>, path=log_management.tables.Log)
          - EntityAttributeFetchImpl(entity=log_management.tables.Graph, querySpaceUid=<gen:1>, path=log_management.tables.Log.graph)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=log_management.tables.Log)
          - SQL table alias mapping - log0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}
          - JOIN (JoinDefinedByMetadata(graph)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=log_management.tables.Graph)
                - SQL table alias mapping - graph1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

Static select for entity log_management.tables.Log [READ]: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_, graph1_.id as id1_0_1_, graph1_.GXL as GXL2_0_1_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ left outer join GRAPHITDATABASE.PUBLIC.GRAPHS graph1_ on log0_.graph_id=graph1_.id where log0_.id=?
Static select for action ACTION_MERGE on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Static select for action ACTION_REFRESH on entity log_management.tables.Log: select log0_.id as id1_1_0_, log0_.graph_id as graph_id5_1_0_, log0_.LOGENTRYNAME as LOGENTRY2_1_0_, log0_.PARAMETERS as PARAMETE3_1_0_, log0_.TIME as TIME4_1_0_ from GRAPHITDATABASE.PUBLIC.LOGS log0_ where log0_.id=?
Using ORDINAL-based conversion for Enum actions.LogEntryName
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )
HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6956de9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at gui.Main.main(Main.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:389)
	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "GRAPHS" besteht bereits
Table "GRAPHS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.GRAPHS (
       id integer not null,
        GXL varchar(255),
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 27 more
Using ORDINAL-based conversion for Enum actions.LogEntryName

    
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )
GenerationTarget encountered exception accepting command : Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    )" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at gui.Main.main(Main.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:389)
	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
Caused by: org.h2.jdbc.JdbcSQLException: Tabelle "LOGS" besteht bereits
Table "LOGS" already exists; SQL statement:

    create table GRAPHITDATABASE.PUBLIC.LOGS (
       id integer not null,
        LOGENTRYNAME integer,
        PARAMETERS NVARCHAR(MAX),
        TIME timestamp,
        graph_id integer,
        primary key (id)
    ) [42101-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateTable.update(CreateTable.java:115)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 27 more
create sequence hibernate_sequence start with 1 increment by 1
GenerationTarget encountered exception accepting command : Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "create sequence hibernate_sequence start with 1 increment by 1" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:290)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at gui.Main.main(Main.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:389)
	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
Caused by: org.h2.jdbc.JdbcSQLException: Sequenz "HIBERNATE_SEQUENCE" besteht bereits
Sequence "HIBERNATE_SEQUENCE" already exists; SQL statement:
create sequence hibernate_sequence start with 1 increment by 1 [90035-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:57)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 27 more

    
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS
GenerationTarget encountered exception accepting command : Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL "
    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS" via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:440)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:129)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:72)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:310)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:467)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:939)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54)
	at log_management.dao.PersonalEntityManager.getInstance(PersonalEntityManager.java:19)
	at gui.Main.main(Main.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.sun.javafx.application.LauncherImpl.launchApplicationWithArgs(LauncherImpl.java:389)
	at com.sun.javafx.application.LauncherImpl.launchApplication(LauncherImpl.java:328)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.launcher.LauncherHelper$FXHelper.main(LauncherHelper.java:767)
Caused by: org.h2.jdbc.JdbcSQLException: Bedingung "FKPQY60TDPYTCJ4YUCD0MFOY7XP" besteht bereits
Constraint "FKPQY60TDPYTCJ4YUCD0MFOY7XP" already exists; SQL statement:

    alter table GRAPHITDATABASE.PUBLIC.LOGS 
       add constraint FKpqy60tdpytcj4yucd0mfoy7xp 
       foreign key (graph_id) 
       references GRAPHITDATABASE.PUBLIC.GRAPHS [90045-190]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.command.ddl.AlterTableAddConstraint.tryUpdate(AlterTableAddConstraint.java:98)
	at org.h2.command.ddl.AlterTableAddConstraint.update(AlterTableAddConstraint.java:72)
	at org.h2.command.CommandContainer.update(CommandContainer.java:78)
	at org.h2.command.Command.executeUpdate(Command.java:253)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:184)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:158)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 27 more
HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a4d6b78'
No JtaPlatform was specified, checking resolver
No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
Checking 0 named HQL queries
Checking 0 named SQL queries
Registering SessionFactory: e1190434-5b2f-46d3-a2f3-62bbedf666ae (<unnamed>)
Not binding SessionFactory to JNDI, no JNDI name configured
HHH000031: Closing
Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6f79caec] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@1c3ae501]
Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
HHH10001008: Cleaning up connection pool [jdbc:h2:~/GraphItDatabase]
Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
